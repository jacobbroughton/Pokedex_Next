{"version":3,"file":"static/webpack/static/development/pages/poke/[name].js.236ac62c377a18119c93.hot-update.js","sources":["webpack:///./pages/poke/[name].js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../../public/static/css/pokemonSingle.scss\";\nimport Header from \"../comps/header\";\nimport Footer from \"../comps/footer\";\n// import styled from \"styled-components\";\n\nconst PokeSummary = props => {\n  const router = useRouter();\n\n  //   const [paramName, setParamName] = useState(router.query.name);\n  const [pokemon, setPokemon] = useState({\n    id: 0,\n    name: \"\",\n    sprites: [],\n    abilities: [],\n    base_experience: 0,\n    forms: [],\n    game_showings: [],\n    held_items: [],\n    moves: [],\n    stats: [],\n    types: [],\n    weight: 0,\n    height: 0\n  });\n  const [loading, setLoading] = useState(false);\n  \n  let capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n\n  useEffect(() => {\n    fetchData(router.query.name);\n  }, [router.query.name]);\n\n  const fetchData = nameP => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${nameP}`)\n      .then(res => res.json())\n      .then(data =>\n        setPokemon({\n          id: data.id,\n          name: data.name,\n          sprites: data.sprites,\n          abilities: data.abilities,\n          base_experience: data.base_experience,\n          forms: data.forms,\n          game_showings: data.game_indices,\n          held_items: data.held_items,\n          moves: data.moves,\n          stats: data.stats,\n          types: data.types,\n          weight: data.weight,\n          height: data.height\n        })\n      );\n  };\n\n\n\n  const {\n    id,\n    name,\n    sprites,\n    abilities,\n    base_experience,\n    forms,\n    game_showings,\n    held_items,\n    moves,\n    types,\n    weight,\n    height,\n    stats\n  } = pokemon;\n\n  return (\n    <div className=\"motherDivSingle\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"nameId\">\n          <div className=\"nameDiv\">\n            <h2 className=\"name\">{capitalizeFirstLetter(name)}</h2>\n          </div>\n          <div className=\"idDiv\">\n            <p>#{id}</p>\n          </div>\n        </div>\n\n        <div className=\"spritesDiv\">\n          <div className=\"defaultDiv\">\n            <h4 className=\"defaultH\">Default</h4>\n            <img src={sprites.front_default} alt={sprites.front_default} />\n            <img src={sprites.back_default} alt={sprites.back_default} />\n          </div>\n\n          <div className=\"shinyDiv\">\n            <div className=\"shinyH\">Shiny</div>\n            <img src={sprites.front_shiny} alt={sprites.front_shiny} />\n            <img src={sprites.back_shiny} alt={sprites.back_shiny} />\n          </div>\n        </div>\n        <div className=\"heightWeight\">\n          <div className=\"heightDiv\">\n            <p>Height: {height / 2}ft</p>\n          </div>\n          <div className=\"weightDiv\">\n            <p>Weight: {weight}lbs</p>\n          </div>\n        </div>\n        <div className=\"abilityType\">\n          <div className=\"abilityDiv\">\n            <h4 className=\"abilitiesH\">Abilities:</h4>\n            {abilities.map(ablty => {\n              return (\n                <span className=\"ability\" key={ablty.ability.name}>\n                  {capitalizeFirstLetter(ablty.ability.name)}\n                  <br />\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"typesDiv\">\n            <div className=\"typesH\">Types:</div>\n            {types.map(typ => {\n              return (\n                <span className=\"type\" id={typ.type.name} key={typ.type.name}>\n                  {capitalizeFirstLetter(typ.type.name)}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"statsDiv\">\n          {/* <StatsH>Stats:</StatsH> */}\n          {stats.map(stt => {\n            return (\n              <span className=\"stat\" id={stt.stat.name} key={stt.stat.name}>\n                {capitalizeFirstLetter(stt.stat.name)}: {stt.base_stat}\n                <br />\n              </span>\n            );\n          })}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default PokeSummary;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAoBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAiBA;AACA;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAssourceRoot":""}