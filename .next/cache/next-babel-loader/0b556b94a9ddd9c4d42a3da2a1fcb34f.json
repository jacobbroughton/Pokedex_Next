{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\"; // import Pokemon from \"./Pokemon\"\n\nconst Index = props => {\n  const {\n    0: pokemonList,\n    1: setPokemonList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(20);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  useEffect(() => {\n    console.log(props.json.results);\n  }, []);\n\n  const loadMore = () => {\n    setLimit(limit + 20);\n    fetchData();\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`).then(res => res.json()).then(data => data.results.map(poke => ({\n      name: `${poke.name}`,\n      url: `${poke.url}`\n    }))).then(pokemonList => setPokemonList(pokemonList)).catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Check console\"), __jsx(\"div\", {\n    className: \"loadBtn\",\n    onClick: () => loadMore(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Load More\"), __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, JSON.stringify(pokemonList)));\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\");\n  const json = await res.json();\n  console.log(json);\n  return {\n    json\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js"],"names":["React","useState","useEffect","fetch","Index","props","pokemonList","setPokemonList","loading","setLoading","limit","setLimit","searchValue","setSearchValue","console","log","json","results","loadMore","fetchData","then","res","data","map","poke","name","url","catch","error","JSON","stringify","getInitialProps","ctx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAEnB,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAAEO,OAAF;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAAES,KAAF;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAEW,WAAF;AAAA,OAAeC;AAAf,MAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAN,CAAWC,OAAvB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACnBP,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACAS,IAAAA,SAAS;AACZ,GAHD;;AAMA,QAAMA,SAAS,GAAG,MAAM;AACpBhB,IAAAA,KAAK,CAAE,4CAA2CO,KAAM,WAAnD,CAAL,CACKU,IADL,CACUC,GAAG,IAAIA,GAAG,CAACL,IAAJ,EADjB,EAEKI,IAFL,CAEUE,IAAI,IAAIA,IAAI,CAACL,OAAL,CAAaM,GAAb,CAAiBC,IAAI,KAC/B;AACIC,MAAAA,IAAI,EAAG,GAAED,IAAI,CAACC,IAAK,EADvB;AAEIC,MAAAA,GAAG,EAAG,GAAEF,IAAI,CAACE,GAAI;AAFrB,KAD+B,CAArB,CAFlB,EAOQN,IAPR,CAOad,WAAW,IAAIC,cAAc,CAACD,WAAD,CAP1C,EAQMqB,KARN,CAQYC,KAAK,IAAId,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Ba,KAA9B,CARrB;AASH,GAVD;;AAeI,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAE,MAAMV,QAAQ,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMW,IAAI,CAACC,SAAL,CAAexB,WAAf,CAAN,CAHI,CADJ;AAOH,CAxCL;;AA2CAF,KAAK,CAAC2B,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACnC,QAAMX,GAAG,GAAG,MAAMlB,KAAK,CAAC,sDAAD,CAAvB;AACA,QAAMa,IAAI,GAAG,MAAMK,GAAG,CAACL,IAAJ,EAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAND;;AAQA,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\";\n// import Pokemon from \"./Pokemon\"\n\n\nconst Index = props => {\n\n    const [ pokemonList, setPokemonList ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ limit, setLimit ] = useState(20);\n    const [ searchValue, setSearchValue ] = useState(\"\");\n\n    useEffect(() => {\n        console.log(props.json.results)\n    }, [])\n\n\n    const loadMore = () => {\n        setLimit(limit + 20)\n        fetchData();\n    }\n\n\n    const fetchData = () => {\n        fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`)\n            .then(res => res.json())\n            .then(data => data.results.map(poke => (\n                {\n                    name: `${poke.name}`,\n                    url: `${poke.url}`\n                }\n            ))).then(pokemonList => setPokemonList(pokemonList)\n            ).catch(error => console.log(\"parsing failed\", error))\n    }\n\n\n\n\n        return (\n            <div className=\"pokeContainer\">\n                <div>Check console</div>\n                <div className=\"loadBtn\" onClick={() => loadMore()}>Load More</div>\n        <pre>{JSON.stringify(pokemonList)}</pre>\n            </div>\n        );\n    }\n\n\nIndex.getInitialProps = async (ctx) => {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\")\n    const json = await res.json();\n    console.log(json)\n\n    return { json };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}