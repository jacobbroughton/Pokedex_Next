{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../../public/static/css/pokemonSingle.scss\";\nimport Header from \"../comps/header\";\nimport Footer from \"../comps/footer\"; // import styled from \"styled-components\";\n\nconst PokeSummary = props => {\n  const router = useRouter(); //   const [paramName, setParamName] = useState(router.query.name);\n\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState({\n    id: 0,\n    name: \"\",\n    sprites: [],\n    abilities: [],\n    base_experience: 0,\n    forms: [],\n    game_showings: [],\n    held_items: [],\n    moves: [],\n    stats: [],\n    types: [],\n    weight: 0,\n    height: 0\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    fetchData(router.query.name);\n  }, [router.query.name]);\n\n  const fetchData = nameP => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${nameP}`).then(res => res.json()).then(data => setPokemon({\n      id: data.id,\n      name: data.name,\n      sprites: data.sprites,\n      abilities: data.abilities,\n      base_experience: data.base_experience,\n      forms: data.forms,\n      game_showings: data.game_indices,\n      held_items: data.held_items,\n      moves: data.moves,\n      stats: data.stats,\n      types: data.types,\n      weight: data.weight,\n      height: data.height\n    }));\n  };\n\n  let capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const {\n    id,\n    name,\n    sprites,\n    abilities,\n    base_experience,\n    forms,\n    game_showings,\n    held_items,\n    moves,\n    types,\n    weight,\n    height,\n    stats\n  } = pokemon;\n  return __jsx(\"div\", {\n    className: \"motherDivSingle\"\n  }, __jsx(Header, null), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"nameId\"\n  }, __jsx(\"div\", {\n    className: \"nameDiv\"\n  }, __jsx(\"h2\", {\n    className: \"name\"\n  }, capitalizeFirstLetter(name))), __jsx(\"div\", {\n    className: \"idDiv\"\n  }, __jsx(\"p\", null, \"#\", id))), __jsx(\"div\", {\n    className: \"spritesDiv\"\n  }, __jsx(\"div\", {\n    className: \"defaultDiv\"\n  }, __jsx(\"h4\", {\n    className: \"defaultH\"\n  }, \"Default\"), __jsx(\"img\", {\n    src: sprites.front_default,\n    alt: sprites.front_default\n  }), __jsx(\"img\", {\n    src: sprites.back_default,\n    alt: sprites.back_default\n  })), __jsx(\"div\", {\n    className: \"shinyDiv\"\n  }, __jsx(\"div\", {\n    className: \"shinyH\"\n  }, \"Shiny\"), __jsx(\"img\", {\n    src: sprites.front_shiny,\n    alt: sprites.front_shiny\n  }), __jsx(\"img\", {\n    src: sprites.back_shiny,\n    alt: sprites.back_shiny\n  }))), __jsx(\"div\", {\n    className: \"heightWeight\"\n  }, __jsx(\"div\", {\n    className: \"heightDiv\"\n  }, __jsx(\"p\", null, \"Height: \", height / 2, \"ft\")), __jsx(\"div\", {\n    className: \"weightDiv\"\n  }, __jsx(\"p\", null, \"Weight: \", weight, \"lbs\"))), __jsx(\"div\", {\n    className: \"abilityType\"\n  }, __jsx(\"div\", {\n    className: \"abilityDiv\"\n  }, __jsx(\"h4\", {\n    className: \"abilitiesH\"\n  }, \"Abilities:\"), abilities.map(ablty => {\n    return __jsx(\"span\", {\n      className: \"ability\",\n      key: ablty.ability.name\n    }, capitalizeFirstLetter(ablty.ability.name), __jsx(\"br\", null));\n  })), __jsx(\"div\", {\n    className: \"typesDiv\"\n  }, __jsx(\"div\", {\n    className: \"typesH\"\n  }, \"Types:\"), types.map(typ => {\n    return __jsx(\"span\", {\n      className: \"type\",\n      id: typ.type.name,\n      key: typ.type.name\n    }, capitalizeFirstLetter(typ.type.name));\n  }))), __jsx(\"div\", {\n    className: \"statsDiv\"\n  }, stats.map(stt => {\n    return __jsx(\"span\", {\n      className: \"stat\",\n      id: stt.stat.name,\n      key: stt.stat.name\n    }, capitalizeFirstLetter(stt.stat.name), \": \", stt.base_stat, __jsx(\"br\", null));\n  }))), __jsx(Footer, null));\n};\n\nexport default PokeSummary;","map":null,"metadata":{},"sourceType":"module"}