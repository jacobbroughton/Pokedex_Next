{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/poke/[name].js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../../public/static/css/pokemonSingle.scss\";\nimport Header from \"../comps/header\";\nimport Footer from \"../comps/footer\"; // import styled from \"styled-components\";\n\nvar PokeSummary = function PokeSummary(props) {\n  var router = useRouter(); //   const [paramName, setParamName] = useState(router.query.name);\n\n  var _useState = useState({\n    id: 0,\n    name: \"\",\n    sprites: [],\n    abilities: [],\n    base_experience: 0,\n    forms: [],\n    game_showings: [],\n    held_items: [],\n    moves: [],\n    stats: [],\n    types: [],\n    weight: 0,\n    height: 0\n  }),\n      pokemon = _useState[0],\n      setPokemon = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  useEffect(function () {\n    fetchData(router.query.name);\n  }, [router.query.name]);\n\n  var fetchData = function fetchData(nameP) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(nameP)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setPokemon({\n        id: data.id,\n        name: data.name,\n        sprites: data.sprites,\n        abilities: data.abilities,\n        base_experience: data.base_experience,\n        forms: data.forms,\n        game_showings: data.game_indices,\n        held_items: data.held_items,\n        moves: data.moves,\n        stats: data.stats,\n        types: data.types,\n        weight: data.weight,\n        height: data.height\n      });\n    });\n  };\n\n  var id = pokemon.id,\n      name = pokemon.name,\n      sprites = pokemon.sprites,\n      abilities = pokemon.abilities,\n      base_experience = pokemon.base_experience,\n      forms = pokemon.forms,\n      game_showings = pokemon.game_showings,\n      held_items = pokemon.held_items,\n      moves = pokemon.moves,\n      types = pokemon.types,\n      weight = pokemon.weight,\n      height = pokemon.height,\n      stats = pokemon.stats;\n  return __jsx(\"div\", {\n    className: \"motherDivSingle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"nameId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"nameDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, capitalizeFirstLetter(name))), __jsx(\"div\", {\n    className: \"idDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"#\", id))), __jsx(\"div\", {\n    className: \"spritesDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"defaultDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"defaultH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Default\"), __jsx(\"img\", {\n    src: sprites.front_default,\n    alt: sprites.front_default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(\"img\", {\n    src: sprites.back_default,\n    alt: sprites.back_default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"shinyDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"shinyH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Shiny\"), __jsx(\"img\", {\n    src: sprites.front_shiny,\n    alt: sprites.front_shiny,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(\"img\", {\n    src: sprites.back_shiny,\n    alt: sprites.back_shiny,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"heightWeight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"heightDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Height: \", height / 2, \"ft\")), __jsx(\"div\", {\n    className: \"weightDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Weight: \", weight, \"lbs\"))), __jsx(\"div\", {\n    className: \"abilityType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"abilityDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"abilitiesH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Abilities:\"), abilities.map(function (ablty) {\n    return __jsx(\"span\", {\n      className: \"ability\",\n      key: ablty.ability.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, capitalizeFirstLetter(ablty.ability.name), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"typesDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"typesH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Types:\"), types.map(function (typ) {\n    return __jsx(\"span\", {\n      className: \"type\",\n      id: typ.type.name,\n      key: typ.type.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, capitalizeFirstLetter(typ.type.name));\n  }))), __jsx(\"div\", {\n    className: \"statsDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, stats.map(function (stt) {\n    return __jsx(\"span\", {\n      className: \"stat\",\n      id: stt.stat.name,\n      key: stt.stat.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, capitalizeFirstLetter(stt.stat.name), \": \", stt.base_stat, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }))), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nexport default PokeSummary;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/poke/[name].js"],"names":["React","useState","useEffect","useRouter","Header","Footer","PokeSummary","props","router","id","name","sprites","abilities","base_experience","forms","game_showings","held_items","moves","stats","types","weight","height","pokemon","setPokemon","loading","setLoading","capitalizeFirstLetter","string","charAt","toUpperCase","slice","fetchData","query","nameP","fetch","then","res","json","data","game_indices","front_default","back_default","front_shiny","back_shiny","map","ablty","ability","typ","type","stt","stat","base_stat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../../public/static/css/pokemonSingle.scss\";\nimport Header from \"../comps/header\";\nimport Footer from \"../comps/footer\";\n// import styled from \"styled-components\";\n\nconst PokeSummary = props => {\n  const router = useRouter();\n\n  //   const [paramName, setParamName] = useState(router.query.name);\n  const [pokemon, setPokemon] = useState({\n    id: 0,\n    name: \"\",\n    sprites: [],\n    abilities: [],\n    base_experience: 0,\n    forms: [],\n    game_showings: [],\n    held_items: [],\n    moves: [],\n    stats: [],\n    types: [],\n    weight: 0,\n    height: 0\n  });\n  const [loading, setLoading] = useState(false);\n  \n  let capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n\n  useEffect(() => {\n    fetchData(router.query.name);\n  }, [router.query.name]);\n\n  const fetchData = nameP => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${nameP}`)\n      .then(res => res.json())\n      .then(data =>\n        setPokemon({\n          id: data.id,\n          name: data.name,\n          sprites: data.sprites,\n          abilities: data.abilities,\n          base_experience: data.base_experience,\n          forms: data.forms,\n          game_showings: data.game_indices,\n          held_items: data.held_items,\n          moves: data.moves,\n          stats: data.stats,\n          types: data.types,\n          weight: data.weight,\n          height: data.height\n        })\n      );\n  };\n\n\n\n  const {\n    id,\n    name,\n    sprites,\n    abilities,\n    base_experience,\n    forms,\n    game_showings,\n    held_items,\n    moves,\n    types,\n    weight,\n    height,\n    stats\n  } = pokemon;\n\n  return (\n    <div className=\"motherDivSingle\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"nameId\">\n          <div className=\"nameDiv\">\n            <h2 className=\"name\">{capitalizeFirstLetter(name)}</h2>\n          </div>\n          <div className=\"idDiv\">\n            <p>#{id}</p>\n          </div>\n        </div>\n\n        <div className=\"spritesDiv\">\n          <div className=\"defaultDiv\">\n            <h4 className=\"defaultH\">Default</h4>\n            <img src={sprites.front_default} alt={sprites.front_default} />\n            <img src={sprites.back_default} alt={sprites.back_default} />\n          </div>\n\n          <div className=\"shinyDiv\">\n            <div className=\"shinyH\">Shiny</div>\n            <img src={sprites.front_shiny} alt={sprites.front_shiny} />\n            <img src={sprites.back_shiny} alt={sprites.back_shiny} />\n          </div>\n        </div>\n        <div className=\"heightWeight\">\n          <div className=\"heightDiv\">\n            <p>Height: {height / 2}ft</p>\n          </div>\n          <div className=\"weightDiv\">\n            <p>Weight: {weight}lbs</p>\n          </div>\n        </div>\n        <div className=\"abilityType\">\n          <div className=\"abilityDiv\">\n            <h4 className=\"abilitiesH\">Abilities:</h4>\n            {abilities.map(ablty => {\n              return (\n                <span className=\"ability\" key={ablty.ability.name}>\n                  {capitalizeFirstLetter(ablty.ability.name)}\n                  <br />\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"typesDiv\">\n            <div className=\"typesH\">Types:</div>\n            {types.map(typ => {\n              return (\n                <span className=\"type\" id={typ.type.name} key={typ.type.name}>\n                  {capitalizeFirstLetter(typ.type.name)}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"statsDiv\">\n          {/* <StatsH>Stats:</StatsH> */}\n          {stats.map(stt => {\n            return (\n              <span className=\"stat\" id={stt.stat.name} key={stt.stat.name}>\n                {capitalizeFirstLetter(stt.stat.name)}: {stt.base_stat}\n                <br />\n              </span>\n            );\n          })}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default PokeSummary;\n"]},"metadata":{},"sourceType":"module"}