{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\"; // import Pokemon from \"./Pokemon\"\n\nvar Index = function Index(props) {\n  var _useState = useState([]),\n      pokemonList = _useState[0],\n      setPokemonList = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(20),\n      limit = _useState3[0],\n      setLimit = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      searchValue = _useState4[0],\n      setSearchValue = _useState4[1];\n\n  useEffect(function () {\n    console.log(props.json.results);\n  }, []);\n\n  var loadMore = function loadMore() {\n    return _regeneratorRuntime.async(function loadMore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(setLimit(limit + 20));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetchData());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var fetchData = function fetchData() {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=\".concat(limit, \"&offset=0\")).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data.results.map(function (poke) {\n        return {\n          name: \"\".concat(poke.name),\n          url: \"\".concat(poke.url)\n        };\n      });\n    }).then(function (pokemonList) {\n      return setPokemonList(pokemonList);\n    })[\"catch\"](function (error) {\n      return console.log(\"parsing failed\", error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Check console\"), __jsx(\"div\", {\n    className: \"loadBtn\",\n    onClick: function onClick() {\n      return loadMore();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Load More\"), console.log(pokemonList));\n};\n\nIndex.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\"));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context2.sent;\n          console.log(json);\n          return _context2.abrupt(\"return\", {\n            json: json\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js"],"names":["React","useState","useEffect","fetch","Index","props","pokemonList","setPokemonList","loading","setLoading","limit","setLimit","searchValue","setSearchValue","console","log","json","results","loadMore","fetchData","then","res","data","map","poke","name","url","error","getInitialProps","ctx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBAEqBJ,QAAQ,CAAC,EAAD,CAF7B;AAAA,MAEXK,WAFW;AAAA,MAEEC,cAFF;;AAAA,mBAGaN,QAAQ,CAAC,KAAD,CAHrB;AAAA,MAGXO,OAHW;AAAA,MAGFC,UAHE;;AAAA,mBAISR,QAAQ,CAAC,EAAD,CAJjB;AAAA,MAIXS,KAJW;AAAA,MAIJC,QAJI;;AAAA,mBAKqBV,QAAQ,CAAC,EAAD,CAL7B;AAAA,MAKXW,WALW;AAAA,MAKEC,cALF;;AAOnBX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAN,CAAWC,OAAvB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPP,QAAQ,CAACD,KAAK,GAAG,EAAT,CADD;;AAAA;AAAA;AAAA,6CAEPS,SAAS,EAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAMA,MAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBhB,IAAAA,KAAK,oDAA6CO,KAA7C,eAAL,CACKU,IADL,CACU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACL,IAAJ,EAAJ;AAAA,KADb,EAEKI,IAFL,CAEU,UAAAE,IAAI;AAAA,aAAIA,IAAI,CAACL,OAAL,CAAaM,GAAb,CAAiB,UAAAC,IAAI;AAAA,eAC/B;AACIC,UAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,CADR;AAEIC,UAAAA,GAAG,YAAKF,IAAI,CAACE,GAAV;AAFP,SAD+B;AAAA,OAArB,CAAJ;AAAA,KAFd,EAOQN,IAPR,CAOa,UAAAd,WAAW;AAAA,aAAIC,cAAc,CAACD,WAAD,CAAlB;AAAA,KAPxB,WAQY,UAAAqB,KAAK;AAAA,aAAIb,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,KAA9B,CAAJ;AAAA,KARjB;AASH,GAVD;;AAeI,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMT,QAAQ,EAAd;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGHJ,OAAO,CAACC,GAAR,CAAYT,WAAZ,CAHG,CADJ;AAOH,CAxCL;;AA2CAF,KAAK,CAACwB,eAAN,GAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACF1B,KAAK,CAAC,sDAAD,CADH;;AAAA;AACdkB,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACL,IAAJ,EAFC;;AAAA;AAEdA,UAAAA,IAFc;AAGpBF,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAHoB,4CAKb;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\";\n// import Pokemon from \"./Pokemon\"\n\n\nconst Index = props => {\n\n    const [ pokemonList, setPokemonList ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ limit, setLimit ] = useState(20);\n    const [ searchValue, setSearchValue ] = useState(\"\");\n\n    useEffect(() => {\n        console.log(props.json.results)\n    }, [])\n\n\n    const loadMore = async () => {\n        await setLimit(limit + 20)\n        await fetchData();\n    }\n\n\n    const fetchData = () => {\n        fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`)\n            .then(res => res.json())\n            .then(data => data.results.map(poke => (\n                {\n                    name: `${poke.name}`,\n                    url: `${poke.url}`\n                }\n            ))).then(pokemonList => setPokemonList(pokemonList)\n            ).catch(error => console.log(\"parsing failed\", error))\n    }\n\n\n\n\n        return (\n            <div className=\"pokeContainer\">\n                <div>Check console</div>\n                <div className=\"loadBtn\" onClick={() => loadMore()}>Load More</div>\n        {console.log(pokemonList)}\n            </div>\n        );\n    }\n\n\nIndex.getInitialProps = async (ctx) => {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\")\n    const json = await res.json();\n    console.log(json)\n\n    return { json };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}