{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // import Pokemon from \"./Pokemon\"\n\nvar PokemonList = function PokemonList(props) {\n  var _useState = useState([]),\n      pokemonList = _useState[0],\n      setPokemonList = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(20),\n      limit = _useState3[0],\n      setLimit = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      searchValue = _useState4[0],\n      setSearchValue = _useState4[1]; // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         pokemonList: [],\n  //         isLoading: false,\n  //         currentLimit: 20,\n  //         searchValue: \"\"\n  //     };\n  // };\n  // componentDidMount() {\n  //     this.fetchData()\n  // };\n  // loadMore = () => {\n  //     this.setState(prevState => ({\n  //         currentLimit: prevState.currentLimit + 20\n  //     }), () => this.fetchData())\n  //     console.log(this.state.currentLimit)\n  // }\n  // fetchData() {\n  //     const { currentLimit, currentOffset } = this.state;\n  //     fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${currentLimit}&offset=${currentOffset}`)\n  //         .then(res => res.json())\n  //         .then(data => data.results.map(poke => (\n  //             {\n  //                 name: `${poke.name}`,\n  //                 url: `${poke.url}`\n  //             }\n  //         ))).then(pokemonList => this.setState({ pokemonList })\n  //         ).catch(error => console.log(\"parsing failed\", error))\n  // }\n\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Check console\"));\n};\n\nPokemonList.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=2&offset=0\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(json);\n          return _context.abrupt(\"return\", {\n            json: json\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js"],"names":["React","useState","useEffect","PokemonList","props","pokemonList","setPokemonList","loading","setLoading","limit","setLimit","searchValue","setSearchValue","getInitialProps","ctx","fetch","res","json","console","log","Index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,kBAEeH,QAAQ,CAAC,EAAD,CAFvB;AAAA,MAEjBI,WAFiB;AAAA,MAEJC,cAFI;;AAAA,mBAGOL,QAAQ,CAAC,KAAD,CAHf;AAAA,MAGjBM,OAHiB;AAAA,MAGRC,UAHQ;;AAAA,mBAIGP,QAAQ,CAAC,EAAD,CAJX;AAAA,MAIjBQ,KAJiB;AAAA,MAIVC,QAJU;;AAAA,mBAKeT,QAAQ,CAAC,EAAD,CALvB;AAAA,MAKjBU,WALiB;AAAA,MAKJC,cALI,kBAQzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKI,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH,CAnDL;;AAsDAT,WAAW,CAACU,eAAZ,GAA8B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACRC,KAAK,CAAC,qDAAD,CADG;;AAAA;AACpBC,UAAAA,GADoB;AAAA;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBA,UAAAA,IAFoB;AAG1BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAH0B,2CAKnB;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAQA,eAAeG,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import Pokemon from \"./Pokemon\"\n\n\nconst PokemonList = props => {\n\n    const [ pokemonList, setPokemonList ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ limit, setLimit ] = useState(20);\n    const [ searchValue, setSearchValue ] = useState(\"\");\n\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         pokemonList: [],\n    //         isLoading: false,\n    //         currentLimit: 20,\n    //         searchValue: \"\"\n    //     };\n    // };\n\n    // componentDidMount() {\n    //     this.fetchData()\n    // };\n\n    // loadMore = () => {\n    //     this.setState(prevState => ({\n    //         currentLimit: prevState.currentLimit + 20\n    //     }), () => this.fetchData())\n    //     console.log(this.state.currentLimit)\n    // }\n\n\n    // fetchData() {\n    //     const { currentLimit, currentOffset } = this.state;\n    //     fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${currentLimit}&offset=${currentOffset}`)\n    //         .then(res => res.json())\n    //         .then(data => data.results.map(poke => (\n    //             {\n    //                 name: `${poke.name}`,\n    //                 url: `${poke.url}`\n    //             }\n    //         ))).then(pokemonList => this.setState({ pokemonList })\n    //         ).catch(error => console.log(\"parsing failed\", error))\n    // }\n\n\n\n\n        return (\n            <div className=\"pokeContainer\">\n                <div>Check console</div>\n            </div>\n        );\n    }\n\n\nPokemonList.getInitialProps = async (ctx) => {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=2&offset=0\")\n    const json = await res.json();\n    console.log(json)\n\n    return { json };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}