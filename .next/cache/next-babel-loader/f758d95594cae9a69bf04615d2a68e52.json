{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\"; // import Pokemon from \"./Pokemon\"\n\nconst Index = props => {\n  const {\n    0: pokemonList,\n    1: setPokemonList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(20);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  useEffect(() => {\n    console.log(props.json.results);\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const loadMore = () => {\n    setLimit(limit + 20);\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`).then(res => res.json()).then(data => data.results.map(poke => ({\n      name: `${poke.name}`,\n      url: `${poke.url}`\n    }))).then(pokemonList => setPokemonList(pokemonList)).catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Check console\"), __jsx(\"div\", {\n    className: \"loadBtn\",\n    onClick: () => loadMore(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Load More\"), console.log(pokemonList));\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\");\n  const json = await res.json();\n  console.log(json);\n  return {\n    json\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js"],"names":["React","useState","useEffect","useCallback","fetch","Index","props","pokemonList","setPokemonList","loading","setLoading","limit","setLimit","searchValue","setSearchValue","console","log","json","results","fetchData","loadMore","then","res","data","map","poke","name","url","catch","error","getInitialProps","ctx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAN,CAAWC,OAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACD,GAFD;;AAIA,QAAMQ,SAAS,GAAG,MAAM;AACtBf,IAAAA,KAAK,CAAE,4CAA2CO,KAAM,WAAnD,CAAL,CACGU,IADH,CACQC,GAAG,IAAIA,GAAG,CAACL,IAAJ,EADf,EAEGI,IAFH,CAEQE,IAAI,IACRA,IAAI,CAACL,OAAL,CAAaM,GAAb,CAAiBC,IAAI,KAAK;AACxBC,MAAAA,IAAI,EAAG,GAAED,IAAI,CAACC,IAAK,EADK;AAExBC,MAAAA,GAAG,EAAG,GAAEF,IAAI,CAACE,GAAI;AAFO,KAAL,CAArB,CAHJ,EAQGN,IARH,CAQQd,WAAW,IAAIC,cAAc,CAACD,WAAD,CARrC,EASGqB,KATH,CASSC,KAAK,IAAId,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Ba,KAA9B,CATlB;AAUD,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAE,MAAMT,QAAQ,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAKGL,OAAO,CAACC,GAAR,CAAYT,WAAZ,CALH,CADF;AASD,CAxCD;;AA0CAF,KAAK,CAACyB,eAAN,GAAwB,MAAMC,GAAN,IAAa;AACnC,QAAMT,GAAG,GAAG,MAAMlB,KAAK,CACrB,sDADqB,CAAvB;AAGA,QAAMa,IAAI,GAAG,MAAMK,GAAG,CAACL,IAAJ,EAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n// import Pokemon from \"./Pokemon\"\n\nconst Index = props => {\n  const [pokemonList, setPokemonList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [limit, setLimit] = useState(20);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    console.log(props.json.results);\n  }, []);\n\n  useEffect(() => {\n      fetchData();\n  }, [])\n\n  const loadMore = () => {\n    setLimit(limit + 20)\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`)\n      .then(res => res.json())\n      .then(data =>\n        data.results.map(poke => ({\n          name: `${poke.name}`,\n          url: `${poke.url}`\n        }))\n      )\n      .then(pokemonList => setPokemonList(pokemonList))\n      .catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return (\n    <div className=\"pokeContainer\">\n      <div>Check console</div>\n      <div className=\"loadBtn\" onClick={() => loadMore()}>\n        Load More\n      </div>\n      {console.log(pokemonList)}\n    </div>\n  );\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await fetch(\n    \"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\"\n  );\n  const json = await res.json();\n  console.log(json);\n\n  return { json };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}