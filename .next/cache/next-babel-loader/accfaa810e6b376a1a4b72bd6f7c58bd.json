{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\"; // import Pokemon from \"./Pokemon\"\n\nconst Index = props => {\n  const {\n    0: pokemonList,\n    1: setPokemonList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(20);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  useEffect(() => {\n    console.log(props.json.results);\n  }, []); // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         pokemonList: [],\n  //         isLoading: false,\n  //         currentLimit: 20,\n  //         searchValue: \"\"\n  //     };\n  // };\n  // componentDidMount() {\n  //     this.fetchData()\n  // };\n  // loadMore = () => {\n  //     this.setState(prevState => ({\n  //         currentLimit: prevState.currentLimit + 20\n  //     }), () => this.fetchData())\n  //     console.log(this.state.currentLimit)\n  // }\n  // fetchData() {\n  //     const { currentLimit, currentOffset } = this.state;\n  //     fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${currentLimit}&offset=${currentOffset}`)\n  //         .then(res => res.json())\n  //         .then(data => data.results.map(poke => (\n  //             {\n  //                 name: `${poke.name}`,\n  //                 url: `${poke.url}`\n  //             }\n  //         ))).then(pokemonList => this.setState({ pokemonList })\n  //         ).catch(error => console.log(\"parsing failed\", error))\n  // }\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Check console\"));\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\");\n  const json = await res.json();\n  console.log(json);\n  return {\n    json\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js"],"names":["React","useState","useEffect","fetch","Index","props","pokemonList","setPokemonList","loading","setLoading","limit","setLimit","searchValue","setSearchValue","console","log","json","results","getInitialProps","ctx","res"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAEnB,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAAEO,OAAF;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAAES,KAAF;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAEW,WAAF;AAAA,OAAeC;AAAf,MAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAN,CAAWC,OAAvB;AACH,GAFQ,EAEN,EAFM,CAAT,CAPmB,CAYnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH,CAvDL;;AA0DAb,KAAK,CAACc,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACnC,QAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,sDAAD,CAAvB;AACA,QAAMa,IAAI,GAAG,MAAMI,GAAG,CAACJ,IAAJ,EAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAND;;AAQA,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\";\n// import Pokemon from \"./Pokemon\"\n\n\nconst Index = props => {\n\n    const [ pokemonList, setPokemonList ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ limit, setLimit ] = useState(20);\n    const [ searchValue, setSearchValue ] = useState(\"\");\n\n    useEffect(() => {\n        console.log(props.json.results)\n    }, [])\n\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         pokemonList: [],\n    //         isLoading: false,\n    //         currentLimit: 20,\n    //         searchValue: \"\"\n    //     };\n    // };\n\n    // componentDidMount() {\n    //     this.fetchData()\n    // };\n\n    // loadMore = () => {\n    //     this.setState(prevState => ({\n    //         currentLimit: prevState.currentLimit + 20\n    //     }), () => this.fetchData())\n    //     console.log(this.state.currentLimit)\n    // }\n\n\n    // fetchData() {\n    //     const { currentLimit, currentOffset } = this.state;\n    //     fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${currentLimit}&offset=${currentOffset}`)\n    //         .then(res => res.json())\n    //         .then(data => data.results.map(poke => (\n    //             {\n    //                 name: `${poke.name}`,\n    //                 url: `${poke.url}`\n    //             }\n    //         ))).then(pokemonList => this.setState({ pokemonList })\n    //         ).catch(error => console.log(\"parsing failed\", error))\n    // }\n\n\n\n\n        return (\n            <div className=\"pokeContainer\">\n                <div>Check console</div>\n            </div>\n        );\n    }\n\n\nIndex.getInitialProps = async (ctx) => {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\")\n    const json = await res.json();\n    console.log(json)\n\n    return { json };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}