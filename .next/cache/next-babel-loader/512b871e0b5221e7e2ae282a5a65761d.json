{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Pokemon from \"./pokemon\";\nimport \"../../public/static/css/pokemonList.scss\";\n\nconst PokemonList = props => {\n  const {\n    0: pokemonList,\n    1: setPokemonList\n  } = useState([]);\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(0);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(20);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, [limit]);\n\n  const loadingStatus = () => {\n    for (let i = 0; i < pokemonList.length; i++) {\n      setLoaded(loaded + 1);\n    }\n  };\n\n  const loadMore = () => {\n    setLimit(limit + 20);\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`).then(res => res.json()).then(data => data.results.map(poke => ({\n      name: `${poke.name}`,\n      url: `${poke.url}`\n    }))).then(pokemonList => setPokemonList(pokemonList)).catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\"\n  }, pokemonList.map(poke => {\n    console.log(poke);\n    const {\n      name,\n      url\n    } = poke;\n    return __jsx(Pokemon, {\n      key: name,\n      name: name,\n      url: url\n    });\n  }), __jsx(\"div\", {\n    className: \"loadBtn\",\n    onClick: () => loadMore()\n  }, \"Load More\"));\n};\n\nPokemonList.getInitialProps = async ctx => {\n  const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\");\n  const json = await res.json();\n  return {\n    json\n  };\n};\n\nexport default PokemonList;","map":null,"metadata":{},"sourceType":"module"}