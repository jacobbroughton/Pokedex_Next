{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/comps/pokemonList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Pokemon from \"./pokemon\";\n\nconst PokemonList = props => {\n  const {\n    0: pokemonList,\n    1: setPokemonList\n  } = useState([]);\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(0);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(20);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, [limit]);\n\n  const loadingStatus = () => {\n    for (let i = 0; i < pokemonList.length; i++) {\n      setLoaded(loaded + 1);\n    }\n  };\n\n  const loadMore = () => {\n    setLimit(limit + 20);\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`).then(res => res.json()).then(data => data.results.map(poke => ({\n      name: `${poke.name}`,\n      url: `${poke.url}`\n    }))).then(pokemonList => setPokemonList(pokemonList)).catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, pokemonList.map(poke => {\n    console.log(poke);\n    const {\n      name,\n      url\n    } = poke;\n    return __jsx(Pokemon, {\n      key: name,\n      name: name,\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }), __jsx(\"div\", {\n    className: \"loadBtn\",\n    onClick: () => loadMore(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Load More\"));\n};\n\nPokemonList.getInitialProps = async ctx => {\n  const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\");\n  const json = await res.json();\n  return {\n    json\n  };\n};\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/comps/pokemonList.js"],"names":["React","useState","useEffect","useCallback","fetch","Pokemon","PokemonList","props","pokemonList","setPokemonList","loaded","setLoaded","loading","setLoading","limit","setLimit","searchValue","setSearchValue","fetchData","loadingStatus","i","length","loadMore","then","res","json","data","results","map","poke","name","url","catch","error","console","log","getInitialProps","ctx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACe,WAAD;AAAA,OAAcC;AAAd,MAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACJ,KAAD,CAFM,CAAT;;AAIA,QAAMK,aAAa,GAAG,MAAM;AAC1B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,WAAW,CAACa,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CT,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;AACF,GAJD;;AAMA,QAAMY,QAAQ,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACD,GAFD;;AAIA,QAAMI,SAAS,GAAG,MAAM;AACtBd,IAAAA,KAAK,CAAE,4CAA2CU,KAAM,WAAnD,CAAL,CACGS,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IACRA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,IAAI,KAAK;AACxBC,MAAAA,IAAI,EAAG,GAAED,IAAI,CAACC,IAAK,EADK;AAExBC,MAAAA,GAAG,EAAG,GAAEF,IAAI,CAACE,GAAI;AAFO,KAAL,CAArB,CAHJ,EAQGR,IARH,CAQQf,WAAW,IAAIC,cAAc,CAACD,WAAD,CARrC,EASGwB,KATH,CASSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,CATlB;AAUD,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,WAAW,CAACoB,GAAZ,CAAgBC,IAAI,IAAI;AACvBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAgBF,IAAtB;AAEA,WAAO,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEC,IAAd;AAAoB,MAAA,IAAI,EAAEA,IAA1B;AAAgC,MAAA,GAAG,EAAEC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALA,CADH,EAOE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAE,MAAMT,QAAQ,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF;AAaD,CA/CD;;AAiDAhB,WAAW,CAAC8B,eAAZ,GAA8B,MAAMC,GAAN,IAAa;AACzC,QAAMb,GAAG,GAAG,MAAMpB,KAAK,CACrB,sDADqB,CAAvB;AAGA,QAAMqB,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAPD;;AASA,eAAenB,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Pokemon from \"./pokemon\";\n\nconst PokemonList = props => {\n  const [pokemonList, setPokemonList] = useState([]);\n  const [loaded, setLoaded] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [limit, setLimit] = useState(20);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    fetchData();\n  }, [limit]);\n\n  const loadingStatus = () => {\n    for (let i = 0; i < pokemonList.length; i++) {\n      setLoaded(loaded + 1);\n    }\n  };\n\n  const loadMore = () => {\n    setLimit(limit + 20);\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`)\n      .then(res => res.json())\n      .then(data =>\n        data.results.map(poke => ({\n          name: `${poke.name}`,\n          url: `${poke.url}`\n        }))\n      )\n      .then(pokemonList => setPokemonList(pokemonList))\n      .catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return (\n    <div className=\"pokeContainer\">\n      {pokemonList.map(poke => {\n        console.log(poke);\n        const { name, url } = poke;\n\n        return <Pokemon key={name} name={name} url={url} />;\n      })}\n      <div className=\"loadBtn\" onClick={() => loadMore()}>\n        Load More\n      </div>\n    </div>\n  );\n};\n\nPokemonList.getInitialProps = async ctx => {\n  const res = await fetch(\n    \"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\"\n  );\n  const json = await res.json();\n\n  return { json };\n};\n\nexport default PokemonList;\n"]},"metadata":{},"sourceType":"module"}