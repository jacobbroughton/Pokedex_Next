{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Pokemon from \"./comps/pokemon\";\n\nvar Index = function Index(props) {\n  var _useState = useState([]),\n      pokemonList1 = _useState[0],\n      setPokemonList = _useState[1];\n\n  var _useState2 = useState(0),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(20),\n      limit = _useState4[0],\n      setLimit = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      searchValue = _useState5[0],\n      setSearchValue = _useState5[1];\n\n  useEffect(function () {\n    fetchData();\n  }, [limit]);\n\n  var loadingStatus = function loadingStatus() {\n    for (var i = 0; i < pokemonList.length; i++) {\n      setLoaded(loaded + 1);\n    }\n  };\n\n  var loadMore = function loadMore() {\n    setLimit(limit + 20);\n  };\n\n  var fetchData = function fetchData() {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=\".concat(limit, \"&offset=0\")).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data.results.map(function (poke) {\n        return {\n          name: \"\".concat(poke.name),\n          url: \"\".concat(poke.url)\n        };\n      });\n    }).then(function (pokemonList2) {\n      return setPokemonList(_toConsumableArray(pokemonList2));\n    })[\"catch\"](function (error) {\n      return console.log(\"parsing failed\", error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"pokeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, pokemonList1.map(function (poke) {\n    console.log(poke);\n    var name = poke.name,\n        url = poke.url;\n    return __jsx(Pokemon, {\n      key: name,\n      name: name,\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }), __jsx(\"div\", {\n    className: \"loadBtn\",\n    onClick: function onClick() {\n      return loadMore();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Load More\"));\n};\n\nIndex.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            json: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Pokedex_Next/pages/index.js"],"names":["React","useState","useEffect","useCallback","fetch","Pokemon","Index","props","pokemonList1","setPokemonList","loaded","setLoaded","loading","setLoading","limit","setLimit","searchValue","setSearchValue","fetchData","loadingStatus","i","pokemonList","length","loadMore","then","res","json","data","results","map","poke","name","url","pokemonList2","error","console","log","getInitialProps","ctx"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACkBN,QAAQ,CAAC,EAAD,CAD1B;AAAA,MACdO,YADc;AAAA,MACAC,cADA;;AAAA,mBAEOR,QAAQ,CAAC,CAAD,CAFf;AAAA,MAEdS,MAFc;AAAA,MAENC,SAFM;;AAAA,mBAGSV,QAAQ,CAAC,KAAD,CAHjB;AAAA,MAGdW,OAHc;AAAA,MAGLC,UAHK;;AAAA,mBAIKZ,QAAQ,CAAC,EAAD,CAJb;AAAA,MAIda,KAJc;AAAA,MAIPC,QAJO;;AAAA,mBAKiBd,QAAQ,CAAC,EAAD,CALzB;AAAA,MAKde,WALc;AAAA,MAKDC,cALC;;AAOrBf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACJ,KAAD,CAFM,CAAT;;AAIA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,WAAW,CAACC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AAC1CT,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;AACJ,GAJD;;AAMA,MAAMa,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBR,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACD,GAFD;;AAIA,MAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBd,IAAAA,KAAK,oDAA6CU,KAA7C,eAAL,CACGU,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,aACRA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,UAAAC,IAAI;AAAA,eAAK;AACxBC,UAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,CADoB;AAExBC,UAAAA,GAAG,YAAKF,IAAI,CAACE,GAAV;AAFqB,SAAL;AAAA,OAArB,CADQ;AAAA,KAFZ,EAQGR,IARH,CAQQ,UAAAS,YAAY;AAAA,aAAIxB,cAAc,oBAAKwB,YAAL,EAAlB;AAAA,KARpB,WASS,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,CAAJ;AAAA,KATd;AAUD,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,YAAY,CAACqB,GAAb,CAAiB,UAAAC,IAAI,EAAI;AACtBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AADsB,QAEZC,IAFY,GAEED,IAFF,CAEZC,IAFY;AAAA,QAENC,GAFM,GAEEF,IAFF,CAENE,GAFM;AAIpB,WAAO,MAAC,OAAD;AAAS,MAAA,GAAG,EAAED,IAAd;AAAoB,MAAA,IAAI,EAAEA,IAA1B;AAAgC,MAAA,GAAG,EAAEC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALJ,CADH,EAOE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMT,QAAQ,EAAd;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF;AAaD,CA/CD;;AAiDAjB,KAAK,CAAC+B,eAAN,GAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJlC,KAAK,CACrB,sDADqB,CADD;;AAAA;AAChBqB,UAAAA,GADgB;AAAA;AAAA,2CAIHA,GAAG,CAACC,IAAJ,EAJG;;AAAA;AAIhBA,UAAAA,IAJgB;AAAA,2CAMf;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAepB,KAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Pokemon from \"./comps/pokemon\"\n\nconst Index = props => {\n  const [pokemonList1, setPokemonList] = useState([]);\n  const [loaded, setLoaded] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [limit, setLimit] = useState(20);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    fetchData();\n  }, [limit]);\n\n  const loadingStatus = () => {\n      for(let i = 0; i < pokemonList.length; i++) {\n        setLoaded(loaded + 1);\n      }\n  }\n\n  const loadMore = () => {\n    setLimit(limit + 20);\n  };\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=0`)\n      .then(res => res.json())\n      .then(data =>\n        data.results.map(poke => ({\n          name: `${poke.name}`,\n          url: `${poke.url}`\n        }))\n      )\n      .then(pokemonList2 => setPokemonList([...pokemonList2]))\n      .catch(error => console.log(\"parsing failed\", error));\n  };\n\n  return (\n    <div className=\"pokeContainer\">\n      {pokemonList1.map(poke => {\n          console.log(poke)\n            const { name, url } = poke;\n\n            return <Pokemon key={name} name={name} url={url} />;\n          })}\n      <div className=\"loadBtn\" onClick={() => loadMore()}>\n        Load More\n      </div>\n    </div>\n  );\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await fetch(\n    \"https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0\"\n  );\n  const json = await res.json();\n\n  return { json };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}